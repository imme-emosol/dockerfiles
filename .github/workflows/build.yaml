name: Image Builder

on:
  push:
    # Build and publish: configure build via commit message
    branches:
      - master
      - build
  pull_request:
    # Build, but don't push on pull requests

jobs:
  configure:
    name: Configure
    runs-on: ubuntu-latest
    outputs:
      pandoc-version: ${{ steps.config-from-commit-message.outputs.pandoc-version }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.after }}
      - name: Configure build
        id: config-from-commit-message
        run: |
          eval "$(./common/config-from-commit-message.sh)"

          printf "Setting outputs:\n"
          printf "  - pandoc-versions: %s\n" "$pandoc_versions"

          printf "::set-output name=pandoc-version::%s\n" "$pandoc_versions"

  # Build images and store them as tar archive
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: configure

    strategy:
      fail-fast: false
      matrix:
        stack:
          - 'alpine'
          - 'ubuntu'
          - 'static'
        version: ${{ fromJSON( needs.configure.outputs.pandoc-version ) }}

    env:
      PANDOC_VERSION: ${{ matrix.version }}
      STACK: ${{ matrix.stack }}

    steps:
      - uses: actions/checkout@v2

      - name: Show config
        run: make show-args

      - name: Build minimal image
        run: make minimal

      - name: Test minimal image
        run: make test-minimal

      # We can't build statically linked core or latex images
      - name: Build core image
        if: ${{ matrix.stack != 'static' }}
        run: make core

      - name: Build LaTeX image
        if: ${{ matrix.stack != 'static' }}
        run: make latex

      - name: Test core image
        if: ${{ matrix.stack != 'static' }}
        run: make test-core

      - name: Test LaTeX image
        if: ${{ matrix.stack != 'static' }}
        run: make test-latex

      - name: Push
        if: github.event_name == 'push' && github.repository == 'pandoc/dockerfiles'
        run: |
          # Log into registry
          echo "${{ secrets.DOCKER_HUB_TOKEN }}" |
            docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
          make push-minimal
          if [ "$STACK" != 'static' ]; then
              make push-core
              make push-latex
          fi
